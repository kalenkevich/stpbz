<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
    <META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=utf-8">
    <TITLE>14. АЗУ с различными видами поиска и способами адресации.</TITLE>
    <p><a href="Тема 8.1.htm">Предыдущая </a>
        <a href="Тема 9.1.htm"> Следующая</a></p>
    <META NAME="GENERATOR" CONTENT="LibreOffice 4.0.5.2 (Linux)">
    <META NAME="AUTHOR" CONTENT="User">
    <META NAME="CREATED" CONTENT="20150304;20550000">
    <META NAME="CHANGEDBY" CONTENT="User">
    <META NAME="CHANGED" CONTENT="20150304;21400000">
    <META NAME="AppVersion" CONTENT="14.0000">
    <META NAME="Company" CONTENT="SPecialiST RePack">
    <META NAME="DocSecurity" CONTENT="0">
    <META NAME="HyperlinksChanged" CONTENT="false">
    <META NAME="LinksUpToDate" CONTENT="false">
    <META NAME="ScaleCrop" CONTENT="false">
    <META NAME="ShareDoc" CONTENT="false">
    <STYLE TYPE="text/css">
        <!--
        @page {
            margin-left: 1.18in;
            margin-right: 0.59in;
            margin-top: 0.79in;
            margin-bottom: 0.79in
        }

        P {
            margin-bottom: 0.08in;
            direction: ltr;
            line-height: 100%;
            widows: 2;
            orphans: 2
        }

        P.western {
            font-family: "Times New Roman", serif;
            font-size: 12pt
        }

        P.cjk {
            font-family: "Times New Roman";
            font-size: 12pt;
            so-language: ru-RU
        }

        P.ctl {
            font-family: "Times New Roman";
            font-size: 12pt
        }

        H1 {
            margin-left: 0.49in;
            margin-top: 1.74in;
            margin-bottom: 0in;
            direction: ltr;
            line-height: 100%;
            text-align: justify;
            page-break-inside: avoid;
            widows: 2;
            orphans: 2
        }

        H1.western {
            font-family: "Times New Roman", sans-serif;
            font-size: 16pt
        }

        H1.cjk {
            font-family: "Arial";
            font-size: 16pt;
            so-language: ru-RU
        }

        H1.ctl {
            font-family: ;
            font-size: 14pt
        }

        H4 {
            margin-top: 0in;
            margin-bottom: 0in;
            direction: ltr;
            line-height: 100%;
            widows: 2;
            orphans: 2
        }

        H4.western {
            font-style: italic;
            font-weight: normal
        }

        H4.cjk {
            font-family: "Times New Roman";
            so-language: ru-RU;
            font-style: italic;
            font-weight: normal
        }

        H4.ctl {
            font-family: "Times New Roman";
            font-style: italic;
            font-weight: normal
        }

        -->
    </STYLE>
</HEAD>
<BODY LANG="ru-RU" DIR="LTR">
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4><B>Тема 14 Особенности АЗУ с
        различными видами поиска и способами
        адресации.</B></FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4><B>14.1 Общие сведения о структуре
        АЗУ </B></FONT>
</P>
<H4 CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; line-height: 130%">
    <FONT SIZE=4><SPAN STYLE="font-style: normal">Структурная
схема АЗУ с поиском, параллельным по
словам и разрядам, приведена на рисунке
14.1.</SPAN></FONT></H4>
<P CLASS="western" STYLE="margin-bottom: 0in"><IMG SRC="Тема 8.2.files/image14.1.png" NAME="Рисунок 540" ALIGN=BOTTOM
                                                   WIDTH=624 HEIGHT=516 BORDER=0></P>
<H4 CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.5in; line-height: 135%">
    <FONT SIZE=4><SPAN STYLE="font-style: normal">В состав АЗУ
входят следующие основные элементы:
</SPAN></FONT><FONT SIZE=4>модуль АЗУ </FONT><FONT SIZE=4><SPAN STYLE="font-style: normal">(</SPAN></FONT><FONT SIZE=4>ассоциативный
    накопитель</FONT><FONT SIZE=4><SPAN STYLE="font-style: normal">)</SPAN></FONT><FONT SIZE=4>,
    регистр аргумента поиска, регистр маски,
    память фиксации реакции,</FONT><FONT SIZE=4><SPAN STYLE="font-style: normal">
образованная буферными регистрами
линий </SPAN></FONT><FONT SIZE=4>Mj</FONT><FONT SIZE=4><SPAN STYLE="font-style: normal">,
</SPAN></FONT><FONT SIZE=4>анализатор многократного
    совпадения, а также вспомогательные
    цепи управления и передачи данных.</FONT></H4>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>На выходе блока </FONT><FONT SIZE=4><I>управления
    считыванием/записью</I></FONT><FONT SIZE=4>
    формируется совокупность сигналов </FONT><FONT SIZE=4><SPAN LANG="en-GB"><I>C</I></SPAN></FONT><SUB><FONT
        SIZE=4><SPAN LANG="en-GB"><I>i</I></SPAN></FONT></SUB><FONT SIZE=4><I>
</I></FONT><FONT SIZE=4>(</FONT><FONT SIZE=4><I>1</I></FONT><FONT SIZE=4>)</FONT><FONT SIZE=4><I>
</I></FONT><FONT SIZE=4>и</FONT><FONT SIZE=4><I> </I></FONT><FONT SIZE=4><SPAN
        LANG="en-GB"><I>C</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN LANG="en-GB"><I>i</I></SPAN></FONT></SUB><FONT
        SIZE=4>
    (</FONT><FONT SIZE=4><I>0</I></FONT><FONT SIZE=4>)</FONT><FONT SIZE=4><I>
</I></FONT><FONT SIZE=4>(см. п. 13.1.3).</FONT><FONT SIZE=4><I> </I></FONT><FONT SIZE=4>При
    выполнении записи в память в этом блоке
    вырабатываются также сигналы </FONT><FONT SIZE=4><SPAN LANG="en-GB"><I>W</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN
        LANG="en-GB"><I>i</I></SPAN></FONT></SUB><FONT SIZE=4><I>
</I></FONT><FONT SIZE=4>(</FONT><FONT SIZE=4><I>1</I></FONT><FONT SIZE=4>)</FONT><FONT SIZE=4><I>
</I></FONT><FONT SIZE=4>и </FONT><FONT SIZE=4><SPAN LANG="en-GB"><I>W</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN
        LANG="en-GB"><I>i</I></SPAN></FONT></SUB><FONT SIZE=4><I>
</I></FONT><FONT SIZE=4>(</FONT><FONT SIZE=4><I>0</I></FONT><FONT SIZE=4>),
    по которым аргумент поиска (с учетом
    маскирования) заносится в ячейку АЗУ с
    адресом, задаваемым кодом на входе
    дешифратора адреса.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Для модулей АЗУ, изготавливаемых
        из ИС и всегда снабжаемых встроенным
        дешифратором адреса, выходные сигналы
        анализатора перед подачей на дешифратор
        адреса предварительно кодируются
        шифратором, чтобы содержимое всех
        ответивших ячеек считывалось за один
        прием.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Назначение и варианты реализации
        составных устройств АЗУ были рассмотрены
        в подразделе 13.1.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>К вопросу о применении средств
        маскирования добавим следующее:</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.5in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>1. З</FONT><FONT SIZE=4><I>адача поиска
    информации</I></FONT><FONT SIZE=4> </FONT><FONT SIZE=4><I>по
    совокупности атрибутов</I></FONT><FONT SIZE=4>,
    которые входят в состав поискового
    аргумента, является наиболее важной
    среди операций, в которых используются
    средства маскирования. Каждый из
    атрибутов описывается соответствующим
    полем слова, хранящегося в ассоциативной
    памяти. Путем соответствующего
    маскирования из этого набора выделяются
    заданные поля.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.5in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>2. Чтобы иметь информацию о
        свободных ячейках памяти для записи в
        них новых данных, в каждом слове отводится
        специальный разряд (“</FONT><FONT SIZE=4><I>занято</I></FONT><FONT SIZE=4>”).
    В исходном состоянии в нем записан “0”,
    после записи в ячейку данных –устанавливается
    “1</FONT><FONT SIZE=4><I>”;</I></FONT><FONT SIZE=4> если
    элемент данных удаляется из памяти,
    этот разряд устанавливается в “0”. </FONT>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.5in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Чтобы найти свободную ячейку,
        достаточно замаскировать все биты
        поискового аргумента, кроме разряда
        занятости, и произвести обычную операцию
        параллельного сравнения, а ее адрес
        определить, например, при помощи
        анализатора многократного совпадения.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.5in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>3. Маскирование также широко
        используется при поиске величин,
        отвечающих определенным числовым
        соотношениям.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-left: 0.49in; margin-bottom: 0in; line-height: 135%">
    <BR>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.5in; margin-bottom: 0in; line-height: 135%"><A
        NAME="_Toc159490403"></A><A NAME="_Toc40262481"></A><A NAME="_Toc40261988"></A>
    <FONT SIZE=4><B>14.1.2 </B></FONT><FONT SIZE=4><B>АЗУ с поиском,
        параллельным по словам </B></FONT><FONT SIZE=4><B>и
        последовательным </B></FONT>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.85in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4><B>по разрядам</B></FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.5in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Для АЗУ </FONT><FONT SIZE=4>с поиском,
    параллельным по словам </FONT><FONT SIZE=4>и
    последовательным по разрядам, м</FONT><FONT SIZE=4>етоды
    адресации во многих отношениях проще
    методов, применяемых при построении
    АЗУ параллельного действия. Кроме того,
    сами алгоритмы логической обработки
    часто требуют поочередного доступа к
    одноименным разрядам всех слов накопителя.
    Этим обусловлено широкое использование
</FONT><FONT SIZE=4>таких АЗУ, в частности, при
    построении а</FONT><FONT SIZE=4>ссоциативных
    процессоров.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Напомним особенности вариантов
        построения АЗУ на базе ЗУ с линейной
        выборкой и ЗУ с адресацией по содержанию.</FONT></P>
<H4 CLASS="western" STYLE="text-indent: 0.5in; line-height: 135%"><A NAME="_Toc159490404"></A><A
        NAME="_Toc40262482"></A><A NAME="_Toc40261989"></A>
    <FONT SIZE=4>Построение АЗУ на базе ЗУ с
        линейной выборкой</FONT></H4>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Модуль памяти с линейной выборкой
        представлен на рисунке 14.2а.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 150%">

    <IMG SRC="Тема 8.2.files/image14.2.png" NAME="Рисунок 541" ALIGN=BOTTOM WIDTH=495 HEIGHT=317 BORDER=0>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4><I>Дешифратор </I></FONT><FONT SIZE=4>указывает
    адрес в массиве памяти при записи в него
    или</FONT><FONT SIZE=4><I> </I></FONT><FONT SIZE=4>считывании
    из него</FONT><FONT SIZE=4><I> </I></FONT><FONT SIZE=4>одного
</FONT><FONT SIZE=4><SPAN LANG="en-GB"><I>n</I></SPAN></FONT><FONT SIZE=4><I>-</I></FONT><FONT SIZE=4>разрядного
    слова.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4><I>Входные и выходные информационные
        линии </I></FONT><FONT SIZE=4>(&#8659;)
    – общие (соответственно на входе и
    выходе) для всех слов памяти.<IMG SRC="Тема 8.2.files/i_d9575b5576cf5767_html_m177ee264.gif" ALIGN=BOTTOM></FONT>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Имеются также </FONT><FONT SIZE=4><I>усилители
</I></FONT><FONT SIZE=4>и </FONT><FONT SIZE=4><I>цепи управления
    считыванием и записью</I></FONT><FONT SIZE=4>.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Адресный поиск осуществляется
        обычно путем последовательной выборки
        слов, при этом на выходных шинах модуля
        памяти поочередно появляются все
        хранящиеся в памяти слова, которые могут
        сравниваться с некоторой внешней
        информацией. Процесс поиска занимает
        до </FONT><FONT SIZE=4><SPAN LANG="en-GB"><I>m</I></SPAN></FONT><FONT SIZE=4>
    операций считывания, причем, как правило,
</FONT><FONT SIZE=4><SPAN LANG="en-GB"><I>m</I></SPAN></FONT><FONT SIZE=4><I>
    &gt;&gt; </I></FONT><FONT SIZE=4><SPAN LANG="en-GB"><I>n</I></SPAN></FONT><FONT SIZE=4>.
</FONT>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4><I>Параллельный поиск с адресацией
        по содержанию</I></FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Переориентировав массив из </FONT><FONT SIZE=4><SPAN LANG="en-GB"><I>n</I></SPAN></FONT><FONT SIZE=4>
    слов по </FONT><FONT SIZE=4><SPAN LANG="en-GB"><I>m</I></SPAN></FONT><FONT SIZE=4>
    разрядов таким образом, чтобы слова и
    разряды поменялись ролями (рисунок
    14.2б), рассмотренную выше процедуру поиска
    можно ускорить (правда, за счет увеличения
    оборудования, занятого в цепях считывания).</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <BR>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 150%">
    <IMG SRC="Тема 8.2.files/image14.2b.png" NAME="Рисунок 542" ALIGN=BOTTOM WIDTH=517 HEIGHT=327 BORDER=0></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 120%">
    <FONT SIZE=4>Из таких модулей можно, соединив
        параллельно входы их адресных дешифраторов,
        составить память большой разрядности
        для записи и считывания слов требуемой
        длины. </FONT>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 120%">
    <FONT SIZE=4>Дешифратор такой памяти
        осуществляет выборку </FONT><FONT SIZE=4><I>разрядного
    столбца</I></FONT><FONT SIZE=4>, т.е. набора
    одноименных разрядов всей совокупности
    слов. Таким образом, считывая одновременно
    лишь один разрядный столбец (</FONT><FONT SIZE=4><I>срез</I></FONT><FONT SIZE=4>),
    поиск можно производить параллельно
    по всем словам. Поступившее на выходные
    информационные линии модуля памяти
    содержимое столбца сравнивается с
    соответствующим битом внешнего поискового
    аргумента.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 120%">
    <FONT SIZE=4>Задавая адрес разрядных столбцов
        при помощи счетчика, можно поочередно
        считать все эти столбцы и сравнить их
        с битами (разрядами) аргумента поиска.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 120%">
    <FONT SIZE=4>Если предполагается проводить
        только сравнение на равенство, то для
        этого достаточно сформировать логическое
        произведение результатов поразрядных
        проверок, описываемое выражением (</FONT><FONT SIZE=4><SPAN LANG="be-BY">13</SPAN></FONT><FONT
        SIZE=4>.3):</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 120%">
    <IMG SRC="Тема 8.2.files/i_d9575b5576cf5767_html_m3fbb74bd.png" NAME="Рисунок 543" ALIGN=BOTTOM WIDTH=174 HEIGHT=30
         BORDER=0></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 120%">
    <FONT SIZE=4>В частности, можно применить и
        рекуррентную формулу (13.7):</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 120%">
    <IMG SRC="Тема 8.2.files/i_d9575b5576cf5767_html_m16be1a19.png" NAME="Рисунок 544" ALIGN=BOTTOM WIDTH=594 HEIGHT=66
         BORDER=0><FONT SIZE=4>Сравнение
    слов с аргументом в АЗУ с поиском,
    параллельным по словам и последовательным
    по разрядам, чаще всего производится с
    использованием </FONT><FONT SIZE=4><I>памяти
    результатов</I></FONT><FONT SIZE=4><SPAN LANG="be-BY"><I>
</I></SPAN></FONT><FONT SIZE=4><SPAN LANG="be-BY">(рис</SPAN></FONT><FONT SIZE=4>унок
    14</FONT><FONT SIZE=4><SPAN LANG="be-BY">.3)</SPAN></FONT><FONT SIZE=4>,
    представляющей собой набор </FONT><FONT SIZE=4><I>буферных
    триггеров</I></FONT><FONT SIZE=4>, по одному на
    каждое слово памяти. При помощи сигнала,
    подаваемого по общей линии, триггеры
    перед началом поиска устанавливается
    в </FONT><FONT SIZE=4><I>“</I></FONT><FONT SIZE=4>1</FONT><FONT SIZE=4><I>”</I></FONT><FONT SIZE=4>.
    Каждый триггер в ходе поиска может быть
    сброшен в </FONT><FONT SIZE=4><I>“</I></FONT><FONT SIZE=4>0</FONT><FONT SIZE=4><I>”</I></FONT><FONT SIZE=4>
    сигналом, поступающим с выхода логической
    схемы “</FONT><FONT SIZE=4><I>Исключающее ИЛИ</I></FONT><FONT SIZE=4>”,
    в случае, если значение очередного бита,
    считанного из памяти, не совпадает с
    соответствующим битом аргумента. После
    проведения поиска по всему содержимому
    массива единицы остаются только в тех
    триггерах, которые соответствуют словам,
    в точности совпадающим с поисковым
    аргументом. Весь поиск требует выполнения
</FONT><FONT SIZE=4><SPAN LANG="en-GB"><I>n</I></SPAN></FONT><FONT SIZE=4>
    операций считывания, что отнимает меньше
    времени, чем в случае адресного поиска,
    так как </FONT><FONT SIZE=4><SPAN LANG="en-GB"><I>n</I></SPAN></FONT><FONT SIZE=4><I>
    &lt;&lt; </I></FONT><FONT SIZE=4><SPAN LANG="en-GB"><I>m</I></SPAN></FONT><FONT SIZE=4><I>.</I></FONT><FONT SIZE=4>
</FONT>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 120%">
    <IMG SRC="Тема 8.2.files/image14.3.png" NAME="Рисунок 545" ALIGN=BOTTOM WIDTH=624 HEIGHT=399 BORDER=0></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 120%">
    <FONT SIZE=4>Заметим, что анализ разрядов
        поискового аргумента (и слов памяти)
        можно проводить необязательно по
        порядку, а в любом другом порядке или
        лишь по отдельным разрядам (эквивалентно
        маскированию).</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 120%">
    <FONT SIZE=4>АЗУ, параллельные по словам и
        последовательные по разрядам, могут
        функционировать в двух основных режимах:
    </FONT><FONT SIZE=4>поисковом </FONT><FONT SIZE=4>и</FONT><FONT SIZE=4>
    вычислительном.</FONT><FONT SIZE=4> </FONT>
</P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 120%">
    <FONT SIZE=4>1. В </FONT><FONT SIZE=4><I>режиме поиска</I></FONT><FONT SIZE=4>
    обычно требуется лишь определить и
    считать из памяти слова, удовлетворяющие
    определенным условиям: например, =, &gt;,
    &lt; некоторого аргумента, быть в заданном
    диапазоне чисел, обладать максимальной
    (минимальной) абсолютной величиной
    среди всех чисел, хранящихся в памяти,
    при этом содержимое памяти, как правило,
    не изменяется.</FONT></P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 120%">
    <FONT SIZE=4>2. В </FONT><FONT SIZE=4><I>режиме ассоциативных
    вычислений,</I></FONT><FONT SIZE=4> как правило,
    слова подвергаются обработке, а полученные
    результаты вновь поступают в массив
    АЗУ, причем часто они заменяют ранее
    хранившиеся там слова (или фрагменты</FONT></P>
<P ALIGN=JUSTIFY STYLE="margin-bottom: 0in; line-height: 120%"><FONT SIZE=4>этих
    слов). Возможность работы в различных
    режимах обеспечивается благодаря
    специальной организации памяти фиксации
    реакций АЗУ.</FONT></P>
<P ALIGN=CENTER STYLE="margin-bottom: 0in; line-height: 130%"><BR>
</P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Вначале рассмотрим простейшую
        структуру, предназначенную для поиска
        слов &gt; или &lt;</FONT><FONT SIZE=4><I> </I></FONT><FONT SIZE=4><SPAN LANG="en-US"><I>A</I></SPAN></FONT><FONT
        SIZE=4><I>,
</I></FONT><FONT SIZE=4>либо =</FONT><FONT SIZE=4><SPAN LANG="en-US"><I>A</I></SPAN></FONT><FONT SIZE=4><I>.
</I></FONT><FONT SIZE=4>Важнейшим элементом этой
    структуры</FONT></P>
<P ALIGN=JUSTIFY STYLE="margin-bottom: 0in; line-height: 130%"><FONT SIZE=4>является</FONT><FONT SIZE=4><I>
    память результатов для проведения
    операций сравнения величин.</I></FONT></P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Для иллюстрации выберем выражение
        (8.9).</FONT></P>
<P CLASS="western" ALIGN=CENTER STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <IMG SRC="Тема 8.2.files/i_d9575b5576cf5767_html_m2f15abe3.png" NAME="Рисунок 546" ALIGN=BOTTOM WIDTH=277 HEIGHT=72
         BORDER=0></P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Схема ячеек </FONT><FONT SIZE=4><I>промежуточных
    результатов</I></FONT><FONT SIZE=4>, используемых
    при сравнении величин, приведена на
    рисунке 14.4. Для обслуживания с</FONT><FONT SIZE=4>лова
    памяти </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>S</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN
        LANG="en-US"><I>j</I></SPAN></FONT></SUB><FONT SIZE=4>
    имеются два триггера</FONT><FONT SIZE=4><I> </I></FONT><FONT SIZE=4><SPAN
        LANG="en-US"><I>g</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN LANG="en-US"><I>j</I></SPAN></FONT></SUB><SUB><FONT
        SIZE=4><I>
</I></FONT></SUB><FONT SIZE=4>и </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>l</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN
        LANG="en-US"><I>j</I></SPAN></FONT></SUB><FONT SIZE=4>.
    Логические выходы этих ячеек обозначим
    как </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>g</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN
        LANG="en-US"><I>ji</I></SPAN></FONT></SUB><SUB><FONT SIZE=4><I>
</I></FONT></SUB><FONT SIZE=4>и </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>l</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN
        LANG="en-US"><I>ji</I></SPAN></FONT></SUB><FONT SIZE=4>.</FONT></P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Значения одноименных разрядов
    </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>a</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN
        LANG="en-US"><I>i</I></SPAN></FONT></SUB><FONT SIZE=4>
    и </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>S</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN LANG="en-US"><I>ji</I></SPAN></FONT></SUB><FONT
        SIZE=4>
    в процессе сравнения содержимого
    заданного слова с аргументом поиска
    последовательно и синхронно передаются
    на входы ячеек промежуточных результатов.
</FONT>
</P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <SUB>
        <IMG SRC="Тема 8.2.files/image14.4.png" NAME="Рисунок 2" ALIGN=BOTTOM WIDTH=624 HEIGHT=404 BORDER=0></SUB></P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4><SPAN LANG="en-US"><I>D</I></SPAN></FONT><FONT SIZE=4><I>-</I></FONT><FONT SIZE=4>триггеры
    в каждом такте переходят в новые
    состояния, которые соответствуют
    значениям переменных </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>g</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN
        LANG="en-US"><I>ji</I></SPAN></FONT></SUB><FONT SIZE=4>
    и </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>l</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN LANG="en-US"><I>ji</I></SPAN></FONT></SUB><SUB><FONT
        SIZE=4><I>
</I></FONT></SUB><FONT SIZE=4>в формулах (8.9). По
    совокупности логических значений,
    зафиксированных на выходах триггеров
    после завершения поразрядного анализа
    содержимого слова </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>S</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN LANG="en-US"><I>j</I></SPAN></FONT></SUB><FONT
        SIZE=4>
    и аргумента </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>A</I></SPAN></FONT><FONT SIZE=4><I>,</I></FONT><FONT SIZE=4>
    определяется окончательный результат
    сравнения. Если </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>g</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN
        LANG="en-US"><I>j</I></SPAN></FONT></SUB><SUB><FONT SIZE=4><I>0
</I></FONT></SUB><FONT SIZE=4>= </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>l</I></SPAN></FONT><SUB><FONT SIZE=4><SPAN
        LANG="en-US"><I>j</I></SPAN></FONT></SUB><SUB><FONT SIZE=4><I>0</I></FONT></SUB><FONT SIZE=4>
    = 0 , то слова совпадают с аргументом.</FONT></P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>По сигналам с выходов памяти
        результатов, поступающих на </FONT><FONT SIZE=4><I>анализатор</I></FONT><FONT SIZE=4>
</FONT><FONT SIZE=4><I>многократного совпадения</I></FONT><FONT SIZE=4>,
    осуществляется считывание слов,
    удовлетворяющих заданным соотношениям.</FONT></P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Память результатов, построенная
        с использованием последовательных
        (рекуррентных) алгоритмов, позволяет
        производить поиск информации, основанный
        на более сложных критериях, в частности:</FONT></P>
<OL>
    <LI><P ALIGN=JUSTIFY STYLE="margin-bottom: 0in; line-height: 130%"><FONT SIZE=4>поиск
        величин, заключенных в заданном
        интервале;</FONT></P>
    <LI><P ALIGN=JUSTIFY STYLE="margin-bottom: 0in; line-height: 130%"><FONT SIZE=4>поиск
        максимального (минимального) значения;</FONT></P>
    <LI><P ALIGN=JUSTIFY STYLE="margin-bottom: 0in; line-height: 130%"><FONT SIZE=4>поиск
        ближайшего снизу (сверху) значения;</FONT></P>
    <LI><P ALIGN=JUSTIFY STYLE="margin-bottom: 0in; line-height: 130%"><FONT SIZE=4>упорядоченную
        выборку (сортировку);</FONT></P>
    <LI><P ALIGN=JUSTIFY STYLE="margin-bottom: 0in; line-height: 130%"><FONT SIZE=4>поиск
        на основе булевых функций;</FONT></P>
    <LI><P ALIGN=JUSTIFY STYLE="margin-bottom: 0in; line-height: 130%"><FONT SIZE=4>поиск
        по соответствию.</FONT></P>
</OL>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Алгоритмы выполнения указанных
        выше поисков рассмотрены ниже,</FONT></P>
<P ALIGN=JUSTIFY STYLE="margin-bottom: 0in; line-height: 130%"><FONT SIZE=4>в
    лабораторном практикуме.</FONT></P>
<P ALIGN=JUSTIFY STYLE="margin-bottom: 0in; line-height: 130%"><BR>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4><B>14.1.3. Проблема адресного считывания
        и записи. Методы решения проблемы</B></FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Рассмотренная выше базовая
        конструкция АЗУ имеет ряд недостатков:</FONT></P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.48in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>а) чтобы запись</FONT><FONT SIZE=4> данных
    в массив памяти производить по разрядным
    столбцам, все содержимое массива должно
    быть предварительно занесено в некоторый
    буфер (например в отдельную область
    оперативной памяти);</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.5in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>б) модификация данных вызывает
        большие трудности, так, изменение лишь
        одного слова требует </FONT><FONT SIZE=4><B>перезаписи
    всего содержимого массива;</B></FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.5in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>в) практически невозможно
        осуществить считывание слов по заданному
        адресу (эта операция необходима для
        того, чтобы просмотреть целиком всё
        слово, определенная часть которого
        совпала с аргументом поиска).</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Таким образом, базовый вариант
        обладает ограниченными возможностями
        с точки зрения реализации вычислительных
        и управляющих функций и применяется
        только в качестве простейшей памяти
        АЗУ (например памяти-каталога, см.
        рисунок1.1).</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Известны более совершенные
        варианты описанной базовой конструкции
        АЗУ, рассчитанной также на использование
        стандартных модулей памяти [9], в которых
        благодаря применению специальных
        методов формирования содержимого
        массивов обеспечивается адресное
        считывание и запись как по словам, так
        и по разрядным столбцам – это память с
    </FONT><FONT SIZE=4><I>диагональной адресацией</I></FONT><FONT SIZE=4>
    на основе сумматора, на основе схем
    «Исключающее ИЛИ» и др. В таких вариантах
    элементы исходного массива данных перед
    записью в память перераспределяют так,
    чтобы разрядные столбцы размещались
    по диагоналям, образованным запоминающими
    ячейками.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Рассмотрим </FONT><FONT SIZE=4><I>диагональную
    систему адресации.</I></FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Эта система (рисунок 14.5) была
        принята за основу при построении ЗУ
        ряда ассоциативных процессоров,
        рассматриваемых далее, в разд. 5 данного
        пособия. </FONT>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <IMG SRC="Тема 8.2.files/image14.5.png" NAME="Рисунок 3" ALIGN=BOTTOM WIDTH=601 HEIGHT=163 BORDER=0></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>В рассматриваемых далее примерах
    </FONT><FONT SIZE=4><B>массив памяти считается
    квадратным. </B></FONT><FONT SIZE=4>На рисунке
    14.6 показан массив памяти объемом 256 слов
    по 256 разрядов. Для массива памяти
    большего объема несколько таких массивов
    объединяются в один (можно предусмотреть
    возможность маскирования заданных
    массивов). Выборка разрядного столбца
    в этом случае производится параллельно
    во всех массивах.</FONT></P>

<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <IMG SRC="Тема 8.2.files/image14.6.png" NAME="Рисунок 410" ALIGN=BOTTOM WIDTH=579 HEIGHT=294 BORDER=0></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Преобразование исходного массива
        данных размером 256 </FONT><FONT SIZE=4><SPAN LANG="en-GB">x</SPAN></FONT><FONT SIZE=4>
    256 в содержимое памяти с диагональной
    системой адресации на основе сумматора
    показано на рисунке 14.7.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Рассмотрим, как в памяти с
        диагональной системой адресации
        выполняются операции считывания и
        записи слов и разрядных столбцов.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Каждый дешифратор этой памяти
        оснащен </FONT><FONT SIZE=4><I>блоком арифметического
    сложения</I></FONT><FONT SIZE=4> (+) – полным
    сумматором, в котором формируется
    сумма(разность) адресного кода, заданного
    извне, и постоянного схемно реализованного
    числа, равного </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>N</I></SPAN></FONT><FONT SIZE=4>
    (номеру строки).</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Сумма берется по модулю </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>m</I></SPAN></FONT><FONT SIZE=4>,
    где </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>m</I></SPAN></FONT><FONT SIZE=4>
    – количество разрядов слова.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <IMG SRC="Тема 8.2.files/image14.7.png" NAME="Рисунок 411" ALIGN=BOTTOM WIDTH=572 HEIGHT=389 BORDER=0></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Часть сумматоров можно блокировать
        (применяя соответствующие средства
        управления) и в результате на их выходах
        получить требуемый фрагмент адреса
        разрядного столбца.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Данные, которые необходимо
        записать в память или считать из нее,
        помещаются в специальный буферный
        циклический регистр сдвига. Направление
        сдвига содержимого этого регистра
        зависит от типа выполняемой операции.
        Рассмотрим эти операции.</FONT></P>
<H1 CLASS="western" STYLE="margin-top: 0in; line-height: 130%"><A NAME="_Toc159490406"></A><A NAME="_Toc40262484"></A><A
        NAME="_Toc40261991"></A>
    <FONT SIZE=4><I>Процедура записи в память
        разрядного столбца</I></FONT></H1>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Представленный в дополнительном
        коде адрес разрядного столбца подается
        на вход сумматора, производится операция
        сложения с номером строки, а подлежащие
        записи данные подаются в буферный
        регистр, где производится их циклический
        сдвиг </FONT><FONT SIZE=4><B>вниз</B></FONT><FONT SIZE=4> на
    число разрядов, определяемое кодом,
    полученным в сумматоре. </FONT>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Далее элементы преобразованного
        разрядного столбца по команде записи
        заносятся в соответствующие ячейки
        памяти. Например, первый разрядный
        столбец записывается в ячейки, выделенные
        на рисунок 14.6 жирными линиями.</FONT></P>
<H1 CLASS="western" STYLE="margin-top: 0in; line-height: 130%"><A NAME="_Toc159490407"></A><A NAME="_Toc40262485"></A><A
        NAME="_Toc40261992"></A>
    <FONT SIZE=4><I>Считывание разрядного столбца
    </I></FONT>
</H1>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Операция считывания разрядного
        столбца выполняется аналогично: на вход
        сумматора подается в дополнительном
        коде адрес считываемого столбца, а по
        команде считывания разрядный столбец
        с переставленными элементами пересылается
        в буферный регистр, где путем циклических
        сдвигов </FONT><FONT SIZE=4><B>вверх</B></FONT><FONT SIZE=4>
    на то же количество разрядов, что и при
    записи, восстанавливается прежний
    порядок элементов.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>В</FONT><FONT SIZE=4><I> процессе записи
    – считывания слова </I></FONT><FONT SIZE=4>на вход
    сумматора подается адрес слова, </FONT><FONT SIZE=4>в
    буферный регистр памяти – содержимое
    слова, </FONT><FONT SIZE=4>где перед записью в
    память или после считывания из памяти
</FONT><FONT SIZE=4>сдвигается соответственно
</FONT><FONT SIZE=4><B>вниз</B></FONT><FONT SIZE=4> или </FONT><FONT SIZE=4><B>вверх</B></FONT><FONT SIZE=4>
    на количество разрядов, задаваемое
    адресом; после записи в ячейки памяти</FONT><FONT SIZE=4><I>
</I></FONT><FONT SIZE=4><SPAN LANG="en-US"><I>i</I></SPAN></FONT><FONT SIZE=4>-е
    слово оказывается в </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>i</I></SPAN></FONT><FONT SIZE=4>-м
    столбце массива памяти.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Другой способ реализации
        диагональной адресации основан на
        использовании для формирования адреса
        вместо сумматора логических схем
        –«</FONT><FONT SIZE=4><I>Исключающее ИЛИ»</I></FONT><FONT SIZE=4>
    (рисунок 14.8). Этот способ позволяет
    работать не только со словами или
    разрядными столбцами, но и с другими
    комбинациями битов массива данных,
    соответствующий код которых сформирован
    в </FONT><FONT SIZE=4><I>регистр</I></FONT><FONT SIZE=4>е
</FONT><FONT SIZE=4><I>режима адресации</I></FONT><FONT SIZE=4>.
    Например, можно сделать так, чтобы
    опрашивался </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>k</I></SPAN></FONT><FONT SIZE=4>-й
    разряд каждого </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>k</I></SPAN></FONT><FONT SIZE=4><I>-</I></FONT><FONT
        SIZE=4>го
    слова, где </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>k</I></SPAN></FONT><FONT SIZE=4>
    – четное число.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>При равенстве нулю всех разрядов
        регистра режима производится считывание
        или запись разрядных столбцов, при
        равенстве единице – считывание или
        запись слов.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Перестановка разрядов слова
        данных перед записью его в память на
        схемах «</FONT><FONT SIZE=4><I>Исключающее ИЛИ»
</I></FONT><FONT SIZE=4>выполняется в соответствии
    со следующим правилом: если </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>W</I></SPAN></FONT><FONT SIZE=4><I>
    – </I></FONT><FONT SIZE=4>номер слова, </FONT><FONT SIZE=4><SPAN LANG="en-US"><I>b</I></SPAN></FONT><FONT SIZE=4><I>
    –</I></FONT><FONT SIZE=4> номер разряда, то позиция
    этого разряда в памяти (номер строки в
    результирующем массиве) задается равной
</FONT><FONT SIZE=4><SPAN LANG="en-US"><I>W</I></SPAN></FONT><FONT SIZE=4><I>
</I></FONT><FONT FACE="Symbol, serif"><FONT SIZE=4></FONT></FONT><FONT SIZE=4><I>
</I></FONT><FONT SIZE=4><SPAN LANG="en-US"><I>b</I></SPAN></FONT><FONT SIZE=4>.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-bottom: 0in; line-height: 130%">
    <IMG SRC="Тема 8.2.files/image14.8.png" NAME="Рисунок 412" ALIGN=BOTTOM WIDTH=590 HEIGHT=525 BORDER=0></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Рассмотрим способ реализации
        ассоциативной памяти на сдвиговых
        регистрах (рисунок 14.9).</FONT></P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Содержимое памяти в каждом такте
        синхронно сдвигается на 1 разряд вправо
        (циклически), при этом значения самых
        правых разрядов всех ячеек (слов)
        сравниваются с соответствующими битами
        маскированного аргумента поиска в
    </FONT><FONT SIZE=4><I>памяти результатов</I></FONT><FONT SIZE=4>.
</FONT>
</P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Память результатов в данной
        схеме необходима, поскольку операции
        сравнения выполняются с отдельными
        разрядами, и конечный результат
        вычисляется рекурсивно.</FONT></P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%"><A NAME="_Toc159490409"></A><A
        NAME="_Toc40262488"></A><A NAME="_Toc40261995"></A>
    <FONT SIZE=4>Разряды хранимых в ячейках памяти
        слов могут нумероваться как слева
        направо, так и справа налево, в зависимости
        от алгоритма сравнения, начиная со
        старших или с младших разрядов слов. </FONT>
</P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <IMG SRC="Тема 8.2.files/image14.9.png" NAME="Рисунок 413" ALIGN=BOTTOM WIDTH=624 HEIGHT=518 BORDER=0></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-bottom: 0in; line-height: 130%">
    <BR>
</P>
<P ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4><B>14.1.4 АЗУ с поиском, последовательным
        по словам и параллельным по разрядам</B></FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Применение АЗУ такого типа при
        циркуляции информации в логико-запоминающей
        среде целесообразно в случае, если время
        получения результатов поиска сравнимо
        с продолжительностью других вычислительных
        операций, например, при использовании
        АЗУ в качестве фильтров данных в каналах
        передачи цифровой информации в темпе
        ее подачи. Причем все операции выполняются
        автоматически, без использования
        программных средств.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.39in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Принцип действия АЗУ,
        последовательного по словам и параллельного
        по разрядам, рассмотрим по схеме,
        приведенной на рисунке 14.10.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.39in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>В рассматриваемой схеме для
        хранения информации используется набор
        линий задержки (ЛЗ), по которым синхронно
        циркулируют серии импульсов. К концам
        линий подключены специальные приемные
        и передающие цепи для управления
        процессом циркуляции.</FONT>
    <IMG SRC="Тема 8.2.files/image14.10.png" NAME="Рисунок 1" ALIGN=BOTTOM WIDTH=624 HEIGHT=793 BORDER=0></P>
<P CLASS="western" STYLE="text-indent: 0.39in; margin-bottom: 0in; line-height: 150%">
    <FONT SIZE=4>Для ЛЗ могут использоваться
        различные материалы: магнитострикционная
        проволока, плавленый кварц, стекло,
        сапфир и др. Эти материалы могут передавать
        акустические колебания на частотах в
        сотни мегагерц с очень малым коэффициентом
        ослабления. Могут также использоваться
        приборы с зарядовой связью (ПЗС), память
        на цилиндрических магнитных доменах
        (ПЦМД) или обычные </FONT><FONT SIZE=4><I>регистры
    сдвига в интегральном</I></FONT><FONT SIZE=4>
</FONT><FONT SIZE=4><I>исполнении. </I></FONT>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.39in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>ЛЗ служит </FONT><FONT SIZE=4><I>запоминающей
    ячейкой</I></FONT><FONT SIZE=4>, способной хранить
    тысячи битов информации (есть импульс
    – </FONT><FONT SIZE=4><I>“</I></FONT><FONT SIZE=4>1</FONT><FONT SIZE=4><I>”</I></FONT><FONT SIZE=4>,
    нет импульса – </FONT><FONT SIZE=4><I>“</I></FONT><FONT SIZE=4>0</FONT><FONT SIZE=4><I>”</I></FONT><FONT
        SIZE=4>).</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.39in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Если разряды слов хранить на
        отдельных ЛЗ, то слова на выходе системы
        появляются последовательно друг за
        другом, а их разряды снимаются с выхода</FONT><FONT SIZE=4><B>
    параллельно</B></FONT><FONT SIZE=4>. </FONT>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.39in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Управление работой осуществляется
        импульсами синхронизации (ИС). Они, в
        частности, подаются на </FONT><FONT SIZE=4><I>адресный
    счетчик</I></FONT><FONT SIZE=4>, текущее значение
    которого равно номеру слова, присутствующего
    в данный момент на выходах </FONT><FONT SIZE=4><I>усилителей</I></FONT><FONT SIZE=4>
</FONT><FONT SIZE=4><I>считывания, </I></FONT><FONT SIZE=4>т.е.
    счетчик задает адрес ячейки памяти.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.38in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>По сигналу «</FONT><FONT SIZE=4><I>СТАРТ</I></FONT><FONT SIZE=4>»</FONT><FONT SIZE=4><I>
</I></FONT><FONT SIZE=4>на начало </FONT><FONT SIZE=4><B>поиска</B></FONT><FONT SIZE=4>
    слов содержимое </FONT><FONT SIZE=4><I>счетчика
    текущего адреса</I></FONT><FONT SIZE=4> передается
    в </FONT><FONT SIZE=4><I>счетчик конечного адреса
</I></FONT><FONT SIZE=4>и снимается блокировка с
</FONT><FONT SIZE=4><I>цепей сравнения </I></FONT><FONT SIZE=4>(компаратора).
    При появлении в </FONT><FONT SIZE=4><I>регистре
    считывания</I></FONT><FONT SIZE=4> слова, совпавшего
    с аргументом поиска по всем незамаскированным
    разрядам, формируется сигнал</FONT><FONT SIZE=4><I>
    сравнения</I></FONT><FONT SIZE=4> и производится
    выборка содержимого </FONT><FONT SIZE=4><I>регистра
    считывания</I></FONT><FONT SIZE=4>. При совпадении
    содержимого </FONT><FONT SIZE=4><I>счетчиков
    текущего</I></FONT><FONT SIZE=4> и </FONT><FONT SIZE=4><I>конечного</I></FONT><FONT SIZE=4>
    адресов цикл работы памяти заканчивается
    и формируется сигнал </FONT><FONT SIZE=4><I>«СТОП»</I></FONT><FONT SIZE=4>.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.39in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4><B>Запись</B></FONT><FONT SIZE=4> слов в
    память на ЛЗ производится в режиме
    обычной адресации при появлении заданного
    числа (адреса) в </FONT><FONT SIZE=4><I>регистре
    текущего адреса.</I></FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.39in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Рассмотренная система при
        добавлении необходимых цепей может
        осуществлять и операции сравнения
        величин. </FONT>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.39in; margin-bottom: 0in; line-height: 130%">
    <BR>
</P>
<H4 CLASS="western" STYLE="text-indent: 0.38in; line-height: 130%"><A NAME="_Toc159490413"></A><A
        NAME="_Toc40262493"></A><A NAME="_Toc40262000"></A>
    <FONT SIZE=4><SPAN STYLE="font-style: normal"><B>14.1.5. Методы
        побайтового поиска с адресацией по
        содержанию .</B></SPAN></FONT></H4>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.39in; margin-bottom: 0in; line-height: 130%">
    <FONT SIZE=4>Память такого типа удобна с точки
        зрения организации информационного
        поиска, в частности, поиска документов</FONT><FONT SIZE=4><I>
    по запросам – </I></FONT><FONT SIZE=4>для отбора
    библиотечной информации, где побайтовый
    просмотр данных является стандартной
    операцией, а целью – обнаружение в
    потоке данных </FONT><FONT SIZE=4><B>строки</B></FONT><FONT SIZE=4>
    символов (идентификаторов), совпадающей
    с заданным поисковым аргументом.</FONT></P>
<P CLASS="western" STYLE="text-indent: 0.39in; margin-bottom: 0in; line-height: 150%">
    <BR>
</P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.39in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Документы обычно содержат большое
        количество идентификаторов, которые
        именуются </FONT><FONT SIZE=4><I>дескрипторами</I></FONT><FONT SIZE=4>.
    Их наличие или отсутствие в документе
    можно связать с логической переменной,
    принимающей одно из двух значений:
    “</FONT><FONT SIZE=4><I>истина</I></FONT><FONT SIZE=4>” или
    “ложь”, а условие поиска заданного
    подмножества документов можно
    сформулировать в виде некоторой булевой
    функции, определенной на наборе таких
    логических переменных.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.5in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Подлежащие идентификации в
        процессе поиска документов элементы
        данных представляют собой не слова, а
        записи переменной длины, содержащие по
        несколько идентификаторов. Это значит,
        что стандартные массивы памяти не очень
        подходят для их хранения. Поиск необходимо
        проводить параллельно по большой
        совокупности записей, а сравнение строк
        – посимвольно (побайтно), так как эта
        операция обычно требует выполнения
        многочисленных частных проверок.
        Соответственно память должна иметь ряд
        особенностей, отличающих ее от других
        АЗУ, рассмотренных ранее в данном
        разделе:</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.5in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>1) большую емкость, которая может
        наращиваться путем добавления новых
        модулей;</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.5in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>2) возможность работать с записями
        переменной длины, состоящими из строк
        символов;</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.5in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>3) наличие средств для поиска по
        различным спецификациям и их сочетаниям.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.5in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>В качестве относительно недорогих
        и достаточно быстродействующих носителей
        информации, используемых в архивной
        памяти, использовались магнитные ленты,
        барабаны, диски, информация в которых
        кодируется по байтам, а хранится в виде
        записей (блоков). Эти ЗУ, конечно, медленнее
        ЗУ на линиях задержки ЛЗ, но зато они
        имеют значительно большую емкость.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Пример формата записи в АЗУ
        (магнитный диск) с последовательной
        обработкой байтов приведен на рисунке
        14.11.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>В каждой позиции строки (см.
        рисунок 14.11) помещается код символа из
        восьми битов и один маркерный бит
        (используется при проведении поиска).</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <IMG SRC="Тема 8.2.files/i_d9575b5576cf5767_html_m4b0b5c6c.gif" ALIGN=LEFT><FONT SIZE=4>Значения
    символов для представления данных
    указаны в таблице 14.1</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <FONT SIZE=4>Поиск строки, совпадающей с
        аргументом, начинается с его первого
        символа. При обнаружении в потоке данных
        такого же символа следующий за ним
        отмечается маркером. На втором шаге
        отыскивается маркер, при совпадении
        его символа с соответствующим символом
        аргумента устанавливается новый маркер.
        Рекуррентная процедура поиска продолжается
        столько шагов, сколько символов содержится
        в поисковом аргументе.</FONT></P>
<P CLASS="western" ALIGN=JUSTIFY STYLE="text-indent: 0.49in; margin-bottom: 0in; line-height: 135%">
    <IMG SRC="Тема 8.2.files/image14.11.png" NAME="Рисунок 415" ALIGN=BOTTOM WIDTH=503 HEIGHT=289 BORDER=0></P>

<P CLASS="western" STYLE="margin-bottom: 0in"><IMG SRC="Тема 8.2.files/table14.1.png" NAME="Рисунок 512" ALIGN=BOTTOM
                                                   WIDTH=624 HEIGHT=291 BORDER=0></P>
<p><a href="Тема 8.1.htm">Предыдущая </a>
    <a href="Тема 9.1.htm"> Следующая</a></p>
</BODY>
</HTML>
